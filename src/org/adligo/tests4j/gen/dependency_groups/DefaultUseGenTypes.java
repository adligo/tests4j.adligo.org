package org.adligo.tests4j.gen.dependency_groups;

import java.io.PrintStream;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

import org.adligo.tests4j.models.shared.common.ClassMethods;

/**
 * these are the default types
 * put in the _MockUse classes
 * generated by ClassUseGen.
 * 
 * @author scott
 *
 */
public class DefaultUseGenTypes {
	public static final Map<String,String> TYPES = getTypes();
	
	public static Map<String,String> getTypes() {
		Map<String,String> toRet = new HashMap<String,String>();
		toRet.put(ClassMethods.BOOLEAN, "true");
		toRet.put(ClassMethods.BYTE, "0");
		toRet.put(ClassMethods.CHAR, "'c'");
		toRet.put(ClassMethods.DOUBLE, "0.1");
		
		toRet.put(ClassMethods.FLOAT, "(float) 0.2");
		toRet.put(ClassMethods.LONG, "3L");
		toRet.put(ClassMethods.SHORT, "(short) 1");
		toRet.put(ClassMethods.INT, "2");
		
		toRet.put(String.class.getName(), "\"string\"");
		toRet.put(CharSequence.class.getName(), "\"charSequence\"");
		toRet.put(Object.class.getName(), "new Object()");
		toRet.put(Throwable.class.getName(), "new Throwable()");
		toRet.put("[" + Throwable.class.getName(), "new Throwable[] {}");
		toRet.put("[L" + StackTraceElement.class.getName() + ";", "new StackTraceElement[] {}");
		toRet.put(PrintStream.class.getName(), "System.out");
		return Collections.unmodifiableMap(toRet);
	}
}
