//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.11.16 at 04:04:16 PM CST 
//


package org.adligo.tests4j.run.xml.io.use_cases;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for use_case_type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="use_case_type"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="brief" type="{http://www.adligo.org/tests4j/run/xml/io/use_cases}use_case_brief_type"/&gt;
 *         &lt;element name="actor" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded"/&gt;
 *         &lt;element name="extend" type="{http://www.adligo.org/tests4j/run/xml/io/use_cases}use_case_brief_type" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="include" type="{http://www.adligo.org/tests4j/run/xml/io/use_cases}use_case_brief_type" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="generalize" type="{http://www.adligo.org/tests4j/run/xml/io/use_cases}use_case_brief_type" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="comments" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "use_case_type", propOrder = {
    "brief",
    "actor",
    "extend",
    "include",
    "generalize",
    "comments"
})
public class UseCaseType {

    @XmlElement(required = true)
    protected UseCaseBriefType brief;
    @XmlElement(required = true)
    protected List<String> actor;
    protected List<UseCaseBriefType> extend;
    protected List<UseCaseBriefType> include;
    protected List<UseCaseBriefType> generalize;
    protected String comments;
    @XmlAttribute(name = "name")
    protected String name;

    /**
     * Gets the value of the brief property.
     * 
     * @return
     *     possible object is
     *     {@link UseCaseBriefType }
     *     
     */
    public UseCaseBriefType getBrief() {
        return brief;
    }

    /**
     * Sets the value of the brief property.
     * 
     * @param value
     *     allowed object is
     *     {@link UseCaseBriefType }
     *     
     */
    public void setBrief(UseCaseBriefType value) {
        this.brief = value;
    }

    /**
     * Gets the value of the actor property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the actor property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getActor().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getActor() {
        if (actor == null) {
            actor = new ArrayList<String>();
        }
        return this.actor;
    }

    /**
     * Gets the value of the extend property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the extend property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExtend().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UseCaseBriefType }
     * 
     * 
     */
    public List<UseCaseBriefType> getExtend() {
        if (extend == null) {
            extend = new ArrayList<UseCaseBriefType>();
        }
        return this.extend;
    }

    /**
     * Gets the value of the include property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the include property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInclude().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UseCaseBriefType }
     * 
     * 
     */
    public List<UseCaseBriefType> getInclude() {
        if (include == null) {
            include = new ArrayList<UseCaseBriefType>();
        }
        return this.include;
    }

    /**
     * Gets the value of the generalize property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the generalize property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGeneralize().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UseCaseBriefType }
     * 
     * 
     */
    public List<UseCaseBriefType> getGeneralize() {
        if (generalize == null) {
            generalize = new ArrayList<UseCaseBriefType>();
        }
        return this.generalize;
    }

    /**
     * Gets the value of the comments property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getComments() {
        return comments;
    }

    /**
     * Sets the value of the comments property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComments(String value) {
        this.comments = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

}
