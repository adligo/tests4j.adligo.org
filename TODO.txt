Other projects that will complement tests4j which 
need to be implemented at some point;

replace TrailInstrumentation with 
PackageDiscovery which produces a to a I_PackageDependencyTree
then the TrialByPackageInstrumenter can 

1) tests4j_4gwt (target tests4j_v0_2) 
			This will contain some abstract code that will help
        run tests4j tests in a web browser from a javascript runtime.
        This will contain a server so that the tests from the browser
        can upload the results to a real JSE java environment, which 
        can then be sent elsewhere (i.e. a intellegence4j server)
2) tests4j_gwt_generator (target tests4j_v0_2)
			This will contain java code which will generate .java source 
		code to actually run a project's tests in javascript.  This is 
		the basic solution to the lack of reflection in gwt client code.

Code in the tests4j project that needs to be implemented 
at some point.

3) SourceInfo needs a .java file parser to correctly (target tests4j_v0_3)
  determine if a .class file hasInterface and hasClass/hasEnum
  for code bases which allow inner classes in .java files where 
  the primary class is a interface.
  
4) Running the tests4j trials on a android or ios (mac) device (target tests4j_v0_3)
using the ADF mobile framework

5) Running the tests4j trials on a android device using the native android api (target tests4j_v0_4)
		This will only be done by adligo if ADF doesn't seem like a good platform
		for video games.
		
		